name: Unit test & Code format check

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up rustfmt
        run: rustup component add rustfmt
      - name: Code formatting
        run: |
          cargo fmt
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add --update
          git commit -m "cargo fmt"
          git push
        continue-on-error: true
      - name: Code style check
        run: cargo fmt --check
      - name: Set up clippy
        run: rustup component add clippy
      - name: Code review with clippy
        uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-review'
          filter_mode: 'nofilter'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build check
        run: cargo build --verbose
      - name: Unit Testing
        run: cargo test --verbose
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build wasm module
        run: wasm-pack build --target web --scope toriyama
      - name: Unit Testing for Wasm module
        run: wasm-pack test --firefox --headless
